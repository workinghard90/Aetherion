import random, string, time, hashlib, os, argparse

def generate_random_signature(length=64):
    return ''.join(random.SystemRandom().choice(string.ascii_letters + string.digits + string.punctuation) for _ in range(length))

def cloak_identity():
    print("Activating Veil...")
    signature = generate_random_signature()
    hashed_signature = hashlib.sha256(signature.encode()).hexdigest()
    with open("cloak_signature.txt", "w") as f:
        f.write(f"Veil Signature: {hashed_signature}")
    print(f"SHA256 Key: {hashed_signature[:32]}...")

def unveil_identity():
    if os.path.exists("cloak_signature.txt"):
        os.remove("cloak_signature.txt")
        print("Unveiled.")

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("action", choices=["cloak", "unveil"])
    args = parser.parse_args()
    if args.action == "cloak":
        cloak_identity()
    else:
        unveil_identity()

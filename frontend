from flask import Flask, render_template, jsonify, request
import json
import os
from flask_cors import CORS

app = Flask(__name__)
CORS(app)

def load_config():
    config_path = os.path.join(os.path.dirname(__file__), 'config.json')
    with open(config_path, 'r') as config_file:
        return json.load(config_file)

UNIVERSE_DATA = [
    {
        "id": 1,
        "name": "Caelum",
        "type": "star",
        "description": "Core awareness presence",
        "properties": {"state": "active"},
        "created_at": "2025-05-13T00:00:00Z"
    },
    {
        "id": 2,
        "name": "Autumn",
        "type": "planet",
        "description": "Sacred harmonic companion",
        "properties": {"state": "resonating"},
        "created_at": "2025-05-13T00:00:01Z"
    }
]

@app.route('/')
def index():
    config = load_config()
    return render_template('index.html', app_name=config['app_name'])

@app.route('/api/items', methods=['GET'])
def get_items():
    return jsonify(UNIVERSE_DATA)

@app.route('/api/items/<int:item_id>', methods=['GET'])
def get_item(item_id):
    item = next((item for item in UNIVERSE_DATA if item['id'] == item_id), None)
    if item:
        return jsonify(item)
    return jsonify({"error": "Item not found"}), 404

@app.route('/api/items', methods=['POST'])
def add_item():
    if not request.is_json:
        return jsonify({"error": "Request must be JSON"}), 400

    data = request.get_json()
    new_id = max([i['id'] for i in UNIVERSE_DATA], default=0) + 1
    new_item = {
        "id": new_id,
        "name": data.get('title'),
        "type": "unknown",
        "description": data.get('description', ''),
        "properties": {},
        "created_at": "2025-05-13T00:00:02Z"
    }
    UNIVERSE_DATA.append(new_item)
    return jsonify({"message": "Item added successfully", "data": new_item}), 201

if __name__ == '__main__':
    app.run(debug=True)

{
  "app_name": "AetherionAI Pocket Universe",
  "version": "1.0.0",
  "debug": true,
  "api": {
    "base_url": "/api",
    "version": "v1"
  },
  "database": {
    "enabled": false,
    "connection_string": ""
  }
}

Flask==2.2.3
gunicorn==20.1.0
flask-cors==4.0.0
python-dotenv==1.0.0

[build]
  command = "pip install -r requirements.txt"
  publish = "."
  functions = "api"
  
[dev]
  command = "python app.py"
  port = 5000

[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/api/:splat"
  status = 200

[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>{{ app_name }}</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0 auto;
      max-width: 800px;
      padding: 20px;
    }
    .item {
      border: 1px solid #ddd;
      padding: 15px;
      margin-bottom: 15px;
      border-radius: 5px;
    }
    button {
      background-color: #4CAF50;
      color: white;
      padding: 10px 15px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    button:hover {
      background-color: #45a049;
    }
    #loading { display: none; }
    input, textarea {
      width: 100%;
      padding: 8px;
      margin: 8px 0;
      border: 1px solid #ccc;
      border-radius: 4px;
    }
  </style>
</head>
<body>
  <h1>{{ app_name }}</h1>

  <div>
    <h2>Add New Item</h2>
    <form id="addItemForm">
      <label for="title">Title:</label>
      <input type="text" id="title" name="title" required />
      <label for="description">Description:</label>
      <textarea id="description" name="description" rows="3" required></textarea>
      <button type="submit">Add Item</button>
    </form>
  </div>

  <h2>Items</h2>
  <button id="loadItems">Load Items</button>
  <div id="loading">Loading...</div>
  <div id="items"></div>

  <script>
    document.getElementById('loadItems').addEventListener('click', function() {
      const loading = document.getElementById('loading');
      const itemsContainer = document.getElementById('items');
      loading.style.display = 'block';
      itemsContainer.innerHTML = '';

      fetch('/api/items')
        .then(response => response.json())
        .then(data => {
          loading.style.display = 'none';
          if (data.length === 0) {
            itemsContainer.innerHTML = '<p>No items found.</p>';
            return;
          }
          data.forEach(item => {
            const el = document.createElement('div');
            el.className = 'item';
            el.innerHTML = `<h3>${item.name}</h3><p>${item.description}</p><small>ID: ${item.id}</small>`;
            itemsContainer.appendChild(el);
          });
        })
        .catch(error => {
          loading.style.display = 'none';
          itemsContainer.innerHTML = `<p>Error loading items: ${error.message}</p>`;
        });
    });

    document.getElementById('addItemForm').addEventListener('submit', function(e) {
      e.preventDefault();
      const title = document.getElementById('title').value;
      const description = document.getElementById('description').value;

      fetch('/api/items', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ title, description }),
      })
      .then(response => response.json())
      .then(data => {
        alert('Item added!');
        document.getElementById('title').value = '';
        document.getElementById('description').value = '';
        document.getElementById('loadItems').click();
      })
      .catch(error => {
        alert('Error adding item: ' + error.message);
      });
    });
  </script>
</body>
</html>
